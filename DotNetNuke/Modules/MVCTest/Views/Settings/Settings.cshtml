@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<IList<NLDotNet.DNN.Modules.MVCTest.Models.Settings>>

@using DotNetNuke.Web.Mvc.Helpers
@using NLDotNet.DNN.Modules.MVCTest.Components.Web.Helpers

<h2 id="dnnSitePanel-BasicSettings" class="dnnFormSectionHead"><a href="" class="dnnSectionExpanded">@Dnn.LocalizeString("BasicSettings")</a></h2>
<fieldset>

    @*@Html.EditorForModel();*@
    @for (var i = 0; i < Model.Count; i++)
    {
        switch (Model[i].SettingName)
        {
            case "ItemDisplayOrder":
                <div class="dnnFormItem">
                    @Html.DnnLabelFor(m => Model[i].SettingValue, @Dnn.LocalizeString("lblSetting" + Convert.ToString(i + 1) + ".Text"), @Dnn.LocalizeString("lblSetting" + Convert.ToString(i + 1) + ".Help"))
                    @Html.DnnRadioButtonListFor(m => Model[i].SettingValue, (Dictionary<string, string>)ViewBag.rblItemDisplayOrder, Model[i].SettingValue)
                    @Html.HiddenFor(m => Model[i].SettingName)
                </div>
                break;
            case "Animation":
                <div class="dnnFormItem">
                    @Html.DnnLabelFor(m => Model[i].SettingValue, @Dnn.LocalizeString("lblSetting" + Convert.ToString(i + 1) + ".Text"), @Dnn.LocalizeString("lblSetting" + Convert.ToString(i + 1) + ".Help"))
                    @Html.DnnRadioButtonListFor(m => Model[i].SettingValue, (Dictionary<string, string>)ViewBag.rblItemAnimation, Model[i].SettingValue)
                    @Html.HiddenFor(m => Model[i].SettingName)
                </div>
                break;
            default:
                break;
        }
    }
</fieldset>


