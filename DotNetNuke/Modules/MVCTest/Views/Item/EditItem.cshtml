@inherits DotNetNuke.Web.Mvc.Framework.DnnWebViewPage<NLDotNet.DNN.Modules.MVCTest.Models.ViewModelEditItem>

@using DotNetNuke.Web.Mvc.Helpers
@using System.Web.Mvc
@using NLDotNet.DNN.Modules.MVCTest.Components.Web.Helpers

@{Model.ModelResourceFile = Dnn.LocalResourceFile;}

<div id="EditItem-@Dnn.ModuleContext.ModuleId">
    <div class="dnnForm dnnEditBasicSettings" id="dnnEditItemContent">

        @*@Html.ValidationSummary(true)*@        
        
        @*<asp:PlaceHolder ID="phEditItem" runat="server">*@
        <div class="dnnFormExpandContent dnnRight">
            <a href="">@Dnn.LocalizeString("ExpandAll")</a>
        </div>

        <h2 id="dnnSitePanel-ItemBasicSettings" class="dnnFormSectionHead dnnClear">
            <a href="" class="dnnSectionExpanded">
                @Dnn.LocalizeString("EditItemBasicSettings")
            </a>
        </h2>
        <fieldset>
            <div class="dnnFormItem">
                @Dnn.LabelFor(m => Model.ItemModel.ItemName, Dnn.LocalizeString("EditItemName.Text"), Dnn.LocalizeString("EditItemName.Help"))
                @Html.TextBoxFor(m => Model.ItemModel.ItemName, new { @class = "DnnRequiredFieldValidator" })
                @Html.ValidationMessageFor(m => Model.ItemModel.ItemName, Dnn.LocalizeString("EditItemName.ErrorMessage"), new { @class = "dnnFormMessage dnnFormError" })
                <input type="hidden" class="ValidationMessageFor" value="@Dnn.LocalizeString("EditItemName.ErrorMessage")"/>
            </div>
            <div class="dnnFormItem">
                @Dnn.LabelFor(m => Model.ItemModel.ItemDescription, Dnn.LocalizeString("EditItemDescription.Text"), Dnn.LocalizeString("EditItemDescription.Help"))
                @Html.TextBoxFor(m => Model.ItemModel.ItemDescription)
            </div>
            <div class="dnnFormItem">
                @Dnn.LabelFor(m => Model.ItemModel.ItemPubDateStart, Dnn.LocalizeString("EditItemPubDateStart.Text"), Dnn.LocalizeString("EditItemPubDateStart.Help"))
                @*@Html.TextBoxFor(m => Model.ItemPubDateStart
                , String.Format("{0:D}", Model.ItemPubDateStart.Value.ToString())
                , new { @class = "textboxdate", type = "datetime" }
                )*@
                @Html.EditorFor(m => Model.ItemModel.ItemPubDateStart)
                <telerik:RadDateTimePicker id="ddpDebPub" runat="server" ViewStateMode="Disabled"></telerik:RadDateTimePicker>                
            </div>
            <div class="dnnFormItem">
                @Dnn.LabelFor(m => Model.ItemModel.ItemPubDateEnd, Dnn.LocalizeString("EditItemPubDateEnd.Text"), Dnn.LocalizeString("EditItemPubDateEnd.Help"))
                @Html.EditorFor(m => Model.ItemModel.ItemPubDateEnd)                
            </div>
            
            @Html.HiddenFor(m => Model.ItemModel.ItemId)
        </fieldset>

        <h2 id="dnnSitePanel-ItemHTMLTextContent" class="dnnFormSectionHead dnnClear">
            <a href="" class="dnnSectionExpanded">
                @Dnn.LocalizeString("ItemHTMLTextContent")
            </a>
        </h2>
        <fieldset>
            
            @Html.Partial(Model.GetEditorTemplateFile())

            @Html.Partial(Model.GetCurrentVersionTemplateFile())

            @*<div id="divCurrentVersion"></div>
            Ci-dessous non dispo dans la version u framewk mvc
            @{
                @Html.Action("ItemCurrentVersion")
            }*@            
        </fieldset>

@*</asp:PlaceHolder>*@

    </div>

    <hr />

    <div class="ehActions">
        <ul class="dnnActions dnnClear">
            <li>
                <button type="button" class="dnnPrimaryAction" postaction="" jqueryaction="click">@Dnn.LocalizeString("Submit")</button>
            </li>
            <li>
                <a href="@Url.Action("Edit", "Item", new {ctl = "Edit"})" class="dnnSecondaryAction">@Dnn.LocalizeString("Cancel")</a>
            </li>
            <li>
                <a href="@Url.Action("EditItemPreview", "Item", new {ctl = "EditItemPreview", itemId = Model.ItemModel.ItemId})" class="dnnSecondaryAction">@Dnn.LocalizeString("Preview")</a>
            </li>
            <li>
                <a href="@Url.Action("EditItemVersion", "Item", new {ctl = "EditItemVersion", itemId = Model.ItemModel.ItemId})" class="dnnSecondaryAction">@Dnn.LocalizeString("Version")</a>
            </li>
            <li>
                <div class="dnnFormItem">
                    @Html.DropDownList("RenderModeList", Model.GetRenderModeList(), new { @postaction = "RenderModeListSelectedIndexChanged", jqueryaction = "change" })
                </div>
            </li>
            @*<li>
                <select name="RenderModeListTest" id="RenderModeListTest" postaction="RenderModeListSelectedIndexChangedTest" jqueryaction="change">
                    <option value="RICH">RICH</option>
                    <option value="BASIC">BASIC</option>
                </select>
            </li>*@
        </ul>
    </div>        

</div>

<link href="@Url.Content(ViewBag.JQDateTimePickerCSSFile)" rel="stylesheet" type="text/css" />
<script src="@Url.Content(ViewBag.JQDateTimePickerJSFile)" type="text/javascript"></script>

<script type="text/javascript">

    /*globals jQuery, window, Sys */
    (function ($, Sys) {
        function dnnEditBasicSettings() {
            $('#dnnEditItemContent').dnnPanels();
            $('#dnnEditItemContent .dnnFormExpandContent a').dnnExpandAll({ expandText: '@Dnn.LocalizeString("ExpandAll")', collapseText: '@Dnn.LocalizeString("CollapseAll")', targetArea: '#dnnEditItemContent' });
        }
        $(function () {
            $('#cancelEdit').click(function () { dnnModal.closePopUp(false); });
            dnnEditBasicSettings();
            Sys.WebForms.PageRequestManager.getInstance().add_endRequest(function () {
                dnnEditBasicSettings();
            });
        });
        $(function () {
            $('#EditItem-@Dnn.ModuleContext.ModuleId .textboxdatetime').each(function (_index, _obj) {
                $(_obj).datetimepicker({ timepicker: true, format: 'd/m/Y H:i', lang: 'fr' });
            });
        });
        function RequiredFieldValidator(source) {
            if ($(source).length == 0) { return true; }
            if (/^\s*$/.test($(source).val())) { return false; }
            return true;
        }
        function IsFormValid() {
            var isValid = true;
            $('#EditItem-@Dnn.ModuleContext.ModuleId input.DnnRequiredFieldValidator').each(function (_index, _obj) {
                if (isValid) {
                    isValid = RequiredFieldValidator(_obj);
                    if (!isValid) {
                        if ($(_obj).next('span.dnnFormMessage.dnnFormError').length == 0) {
                            $(_obj).after('<span class=\"dnnFormMessage dnnFormError\">' + $(_obj).next('input.ValidationMessageFor[type="hidden"]').val() + '</span>');
                        } else {
                            $(_obj).next().show();
                        }
                    }
                }
            });
            return isValid;
        }
        $(function () {
            $('form').find('[postaction]').each(function (_index, _obj) {
                var _postaction = $(_obj).attr('postaction');
                var _evt = $(_obj).attr('jqueryaction');
                $(_obj).on(_evt, function (e) {
                    $('form').attr('action', _postaction);
                    $('form').submit();
                });
                $(_obj).removeAttr('postaction').removeAttr('jqueryaction');
            });
        });
        $(function () {
            $('form').on('submit', function (e) {
                e.preventDefault();
                var _isValid = true;
                var _actionpattern = 'actionname';
                var _actiondefault = 'EditItem';
                var _action = (/^\s*$/.test($(this).attr('action'))) ? _actiondefault : $(this).attr('action');
                var _url = '@Html.Raw(@Url.ModuleContext.NavigateUrl(Url.ModuleContext.TabId, "EditItem", true, "mid", Url.ModuleContext.ModuleId.ToString(), "itemId", Model.ItemModel.ItemId.ToString(),"controller","Item", "action", "actionname")).ToString().Remove(0,(string.Format("{0}://{1}", Request.Url.Scheme, Request.Url.Authority)).Length)';
                if (_action == _actiondefault) { _isValid = IsFormValid(); }
                if (_isValid) {
                    $('#EditItem-@Dnn.ModuleContext.ModuleId #@ViewBag.CKEditorControlName').each(function (_index, _obj) {
                        var _content = "";
                        var _instanceName = "@ViewBag.CKEditorControlName";
                        for (var i in CKEDITOR.instances) {
                            if (CKEDITOR.instances[i].name == _instanceName) {
                                _content = CKEDITOR.instances[i].getData();
                                break;
                            }
                        }
                        $('#EditItem-@Dnn.ModuleContext.ModuleId input[type="hidden"][name*="nText"]').val(_content);
                    });
                    $('#EditItem-@Dnn.ModuleContext.ModuleId #txtContentEditor').each(function (_index, _obj) {
                        var _content = "";
                        _content = $(_obj).val();
                        $('#EditItem-@Dnn.ModuleContext.ModuleId input[type="hidden"][name*="nText"]').val(_content);
                    });
                    $(this).unbind('submit').attr('action', _url.replace(_actionpattern, _action)).submit();
                }
            });
        });
        @*$(function () {
            $('#EditItem-@Dnn.ModuleContext.ModuleId input[type="radio"][name*="TextRenderModeRBList"]').each(function (_index, _obj) {
                $(_obj).on('click', function (e) {
                    if (!$(_obj).is(':checked')) {
                        document.location.href = '@Url.Action("TextRenderModeRBListCheckedIndexChanged", "Item", new { ctl = "EditItem", itemId = Model.ItemModel.ItemId })';
                    }
                });
            });
        });*@
        @*$(function () {
            $('#EditItem-@Dnn.ModuleContext.ModuleId select[name*="RenderModeList"]').each(function (_index, _obj) {
                $(_obj).on('change', function (e) {
                    var str = "";
                    $(_obj).find("option:selected").each(function (__index,__obj) {
                        str += $(__obj).text() + " ";
                    });
                    alert(str);
                    document.location.href = "@Html.Raw(@Url.Action("OnRenderModeListSelectedIndexChanged", "Item", new { ctl = "EditItem", itemId = Model.ItemModel.ItemId }))" //"javascript:dnnModal.show('http://niclep.me/mvc/ctl/EditItem/mid/2003/controller/Item/action/OnRenderModeListSelectedIndexChanged?popUp=true',/*showReturn*/false,550,950,true,'')";
                    $('form').submit();
                });
            });
        });*@
        @*$(function () {
            $.get("@Url.Action("ItemCurrentVersion", "Item")", function(data) {
                if (data) {
                    $('#divCurrentVersion').append(data);
                }
            });
        });*@

        @*$.ajax({
            url: '@Url.Action("ItemCurrentVersion", "Item", new { itemId = Model.ItemModel.ItemId })',
            type: 'GET',
            dataType: 'html',
            success: function (result) {
                var resp;
                // trim response from HTML that, for some reason, gets appended to the response
                if (result.indexOf('<!DOCTYPE') !== -1) {
                    resp = result.substring(0, result.indexOf('<!DOCTYPE'));
                } else {
                    resp = result;
                }
                $('#divCurrentVersion').html(resp);
            }
        });*@

    }(jQuery, window.Sys));

</script>